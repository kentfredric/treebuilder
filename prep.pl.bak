#!/usr/bin/env perl 

use strict;
use warnings;

# FILENAME: prep.pl
# CREATED: 11/09/11 16:32:06 by Kent Fredric (kentnl) <kentfredric@gmail.com>
# ABSTRACT: Prepare pre-selection merge info

use List::Util qw( first );
my ( $new, $append, $run, $nomerge, $lax );

if ( first { $_ eq '--new' } @ARGV ) {
  $new = 1;
  @ARGV = grep { $_ ne '--new' } @ARGV;
}
if ( first { $_ eq '--append' } @ARGV ) {
  $append = 1;
  @ARGV = grep { $_ ne '--append' } @ARGV;
}
if ( first { $_ eq '--run' } @ARGV ) {
  $run = 1;
  @ARGV = grep { $_ ne '--run' } @ARGV;
}
if ( first { $_ eq '--nomerge' } @ARGV ) {
  $nomerge = 1;
  @ARGV = grep { $_ ne '--nomerge' } @ARGV;
}
if ( first { $_ eq '--lax' } @ARGV ) {
  $lax = 1;
  @ARGV = grep { $_ ne '--lax' } @ARGV;
}

sub enote {
  *STDERR->print( "\e[32m ** ", join q{ }, @_, "\e[0m\n" );
}

if ($new) {
  enote("Generating first 2000 new items");
  system( 'shuf', '-n', '2000', '-o', '/root/rebuilder/current.txt', '/root/rebuilder/brokens.all' ) and die;
}

open my $fh, "<", '/root/rebuilder/current.txt' or die;

my @builds = <$fh>;
chomp for @builds;
@builds = sort @builds;

my @cmdbase = (
  'resolve', '--preserve-world',
  '--reinstall-scm' => 'daily',
  '--follow-installed-build-dependencies',
  '--suggestions'        => 'take',
  '--recommendations'    => 'take',
  '--permit-old-version' => '*/*',
  '--permit-downgrade'   => '*/*',

  #'-H'                   => '>sys-block/parted-2.4',
  '--keep'                => 'if-same-metadata',
  '--target-slots'        => 'all',
  '--slots'               => 'all',
  '--continue-on-failure' => ( $lax ? 'if-satisfied' : 'if-independent' ), 
);

my @preflags = (
  @cmdbase, @builds,
  '--keep-targets' => 'if-same-metadata',
  @ARGV,
);
my @mainflags = (
  @cmdbase, @builds,
  '--keep-targets' => 'never',
  '--execute', @ARGV,
);

if ( not $nomerge and not $run ) {
  enote("Doing first pass to fix metadata");
  _meta_prepare();
  enote("Computing changed depgraph");
  _meta_collect();
}
if ( not $run ) {
  my $mode = '>';
  $mode = '>>' if $append;
  enote("Updating rebuild file $mode");
  _detect_big_rebuild();
  enote("Finding interesting changes");
  _show_interesting_changes();
}
else {
  enote("Running build");
  _do_buiild();
}

sub _meta_prepare {
  open my $cave, '-|', 'sudo', '-i', 'cave', @preflags ) or die;
  while ( defined( my $line = <$cave> ) ) { next; }
}

sub _meta_collect {
    open my $cave, '-|', 'sudo', '-i', 'cave', @preflags ) or die;
    open my $caveout, '>', '/root/rebuilder/current.out' or die;
    while ( defined( my $line = <$cave> ) ) {
        $caveout->print($line);
    }
}

sub _detect_big_rebuild {
    open my $rebuildtxt, $mode, '/root/rebuilder/rebuild.txt' or die;
    open my $depper, '-|', $^X, '/root/rebuilder/paludis_deps.pl', '/root/rebuilder/current.out' or die;

    $depper->autoflush(1);
    while ( defined( my $line = <$depper> ) ) {
      $rebuildtxt->print($line);
    }

}

sub _show_interesting_changes {
    exec {$^X} 'filter_paludis_useflags', '/root/rebuilder/filter_paludis_useflags.pl', '/root/rebuilder/current.out';
}

sub _do_build {
    exec {'sudo'} 'sudo', '-i', 'cave', @mainflags;

}
